<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.muye.assets.scene.mapper.SceneMapper">

    <resultMap id="RobotSimpleMap" type="cn.mrobot.bean.assets.robot.Robot">
        <result property="id" column="ID"/>
        <result property="name" column="NAME"/>
        <result property="code" column="CODE"/>
        <result property="typeId" column="TYPE_ID"/>
        <result property="batteryThreshold" column="BATTERY_THRESHOLD"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="boxActivated" column="BOX_ACTIVATED"/>
        <result property="online" column="ONLINE"/>
        <result property="sceneId" column="SCENE_ID"/>
        <result property="sceneName" column="SCENE_NAME"/>
    </resultMap>
    <resultMap id="MapInfoSimpleMap" type="cn.mrobot.bean.area.map.MapInfo">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="MAP_NAME" property="mapName" jdbcType="VARCHAR"/>
        <result column="SCENE_NAME" property="sceneName" jdbcType="BIGINT"/>
        <result column="MAP_ALIAS" property="mapAlias" jdbcType="VARCHAR"/>
        <result column="PNG_IMAGE_LOCA" property="pngImageLocalPath" jdbcType="BIGINT"/>
        <result column="ROS" property="ros" jdbcType="VARCHAR"/>
        <result column="DEVICE_ID" property="deviceId" jdbcType="BIGINT"/>
        <result column="PNG_DESIGNED" property="pngDesigned" jdbcType="VARCHAR"/>
        <result column="MAP_ZIP_ID" property="mapZipId" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="MapPointSimpleMap" type="cn.mrobot.bean.area.point.MapPoint">
        <result property="id" column="ID"/>
        <result property="storeId" column="STORE_ID"/>
        <result property="createdBy" column="CREATED_BY"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="pointName" column="POINT_NAME"/>
        <result property="pointAlias" column="POINT_ALIAS"/>
        <result property="sceneName" column="SCENE_NAME"/>
        <result property="mapName" column="MAP_NAME"/>
        <result property="x" column="X"/>
        <result property="y" column="Y"/>
        <result property="th" column="TH"/>
        <result property="pointLevel" column="POINT_LEVEL"/>
        <result property="mapPointTypeId" column="MAP_POINT_TYPE_ID"/>
        <result property="ICPointType" column="IC_POINT_TYPE"/>
        <result property="cloudMapPointTypeId" column="CLOUD_POINT_TYPE_ID"/>
    </resultMap>
    <select id="findRobotBySceneId" resultMap="RobotSimpleMap" parameterType="java.lang.Long">
        SELECT
            robot.ID,
            robot.NAME,
            robot.CODE,
            ifnull(robot.DESCRIPTION,'') as DESCRIPTION,
            robot.BOX_ACTIVATED,
            robot.ONLINE
        FROM AS_ROBOT robot LEFT JOIN SCENES_ROBOTS_RELATIONS r ON robot.ID = r.ROBOT_ID
        WHERE r.SCENE_ID = #{0}
    </select>

    <select id="findRobotBySceneIdAndRobotIds" resultMap="RobotSimpleMap">
        SELECT
        robot.ID,
        robot.NAME,
        robot.CODE,
        ifnull(robot.DESCRIPTION,'') as DESCRIPTION,
        robot.BOX_ACTIVATED,
        robot.ONLINE
        FROM AS_ROBOT robot LEFT JOIN SCENES_ROBOTS_RELATIONS r ON robot.ID = r.ROBOT_ID
        WHERE r.SCENE_ID = #{sceneId} AND r.ROBOT_ID in
        <foreach item="item" index="index" collection="robotIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findMapBySceneId" resultMap="MapInfoSimpleMap" parameterType="java.lang.Long">
        SELECT i.*
        FROM A_MAP_INFO i LEFT JOIN SCENES_MAPS_RELATIONS smr ON i.SCENE_NAME = smr.MAP_SCENENAME
        WHERE smr.SCENE_ID = #{param1} AND i.STORE_ID = #{param2}
    </select>

    <!-- 根据场景ID查询充电桩点 -->
    <select id="findMapPointBySceneId" resultMap="MapPointSimpleMap" parameterType="java.lang.Long">
        SELECT i.* FROM A_MAP_POINT i LEFT JOIN SCENES_MAPS_RELATIONS smr ON i.SCENE_NAME = smr.MAP_SCENENAME
        WHERE smr.SCENE_ID = #{param1} AND i.STORE_ID = #{param2} AND i.CLOUD_POINT_TYPE_ID = #{param3}
        ORDER  BY  SCENE_NAME, MAP_NAME,POINT_NAME ASC
    </select>

    <select id="findMapBySceneName" resultMap="MapInfoSimpleMap">
        SELECT i.*
        FROM A_MAP_INFO i
        WHERE i.SCENE_NAME = #{param1} AND i.STORE_ID = #{param2}
    </select>

    <delete id="deleteRobotAndSceneRelations" parameterType="java.lang.Long">
        DELETE FROM SCENES_ROBOTS_RELATIONS WHERE SCENE_ID = #{0}
    </delete>

    <delete id="deleteMapAndSceneRelations" parameterType="java.lang.Long">
        DELETE FROM SCENES_MAPS_RELATIONS WHERE SCENE_ID = #{0}
    </delete>

    <select id="checkRobot" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT count(ROBOT_ID) FROM SCENES_ROBOTS_RELATIONS WHERE ROBOT_ID = #{0}
    </select>

    <select id="checkRobotLegal" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT count(*) FROM AS_ROBOT WHERE ID = #{0}
    </select>

    <select id="checkMapInfo" resultType="java.lang.Integer">
        SELECT count(*)
        FROM AS_SCENE s LEFT JOIN SCENES_MAPS_RELATIONS r ON s.ID = r.SCENE_ID
        WHERE r.MAP_SCENENAME = #{param1} AND s.STORE_ID = #{param2};
    </select>

    <select id="checkMapLegal" resultType="java.lang.Integer">
        SELECT count(*) FROM A_MAP_INFO WHERE SCENE_NAME = #{param1} AND STORE_ID = #{param2}
    </select>

    <insert id="insertSceneAndMapRelations">
        INSERT INTO SCENES_MAPS_RELATIONS
        (SCENE_ID,MAP_SCENENAME)
        VALUES
        (#{param1}, #{param2})
    </insert>

    <insert id="insertSceneAndRobotRelations">
        INSERT INTO SCENES_ROBOTS_RELATIONS
        (SCENE_ID,ROBOT_ID)
        VALUES
        <foreach collection="param2" item="id" separator=",">
            (#{param1}, #{id})
        </foreach>
    </insert>

    <update id="setSceneState">
        UPDATE AS_SCENE SET STATE = #{param3} WHERE ID IN (SELECT SCENE_ID FROM SCENES_MAPS_RELATIONS WHERE MAP_SCENENAME = #{param1}) AND STORE_ID = #{param2}
    </update>

    <update id="setSceneStateForUpload">
        UPDATE goor.AS_SCENE SET STATE = #{param2} WHERE ID = #{param1}
    </update>

</mapper>