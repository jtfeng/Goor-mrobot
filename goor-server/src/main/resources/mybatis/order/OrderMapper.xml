<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.muye.order.mapper.OrderMapper">

    <sql id = "orderColumn">
        o.id AS "id",
        o.order_setting_id AS "orderSetting.id",
        o.robot_id AS "robot.id",
        o.start_station_id AS "startStation.id",
        o.shelf_id AS "shelf.id",
        o.scene_id AS "scene.id",
        o.status AS "status",
        o.store_id AS "storeId",
        o.finish_date AS "finishDate",
        o.created_by AS "createdBy",
        o.create_time AS "createTime"
    </sql>

    <sql id = "orderJoin">
    </sql>

    <select id="getById" resultType="cn.mrobot.bean.order.Order">
        select
        <include refid="orderColumn" />
        from OR_ORDER o
        where o.id = #{id};
    </select>

    <insert id="saveOrder" parameterType="cn.mrobot.bean.order.Order" useGeneratedKeys="true" keyProperty="id">
        insert into OR_ORDER(
        order_setting_id,
        robot_id,
        start_station_id,
        shelf_id,
        scene_id,
        status,
        finish_date,
        store_id,
        created_by,
        create_time
        ) values (
        #{orderSetting.id},
        #{robot.id},
        #{startStation.id},
        #{shelf.id},
        #{scene.id},
        #{status},
        #{finishDate},
        #{storeId},
        #{createdBy},
        #{createTime}
        )
    </insert>

    <update id="updateOrder" parameterType="cn.mrobot.bean.order.Order">
        update OR_ORDER
        <set>
            <if test="orderSetting != null and orderSetting.id != null and orderSetting.id != ''" >
                order_setting_id = #{orderSetting.id},
            </if>
            <if test="robot != null and robot.id != null and robot.id != ''" >
                robot_id = #{robot.id},
            </if>
            <if test="startStation != null and startStation.id != null and startStation.id != ''" >
                start_station_id = #{startStation.id},
            </if>
            <if test="shelf != null and shelf.id != null and shelf.id != ''" >
                shelf_id = #{shelf.id},
            </if>
            <if test="scene != null and scene.id != null and scene.id != ''" >
                scene_id = #{scene.id},
            </if>
            <if test="status != null" >
                status = #{status},
            </if>
            <if test="finishDate != null" >
                finish_date = #{finishDate}
            </if>
        </set>
        WHERE id = #{id}
    </update>


    <select id="listByDomain" resultType="cn.mrobot.bean.order.Order">
        select
        <include refid="orderColumn" />
        from OR_ORDER o
        <where>
            <if test="orderSetting != null and orderSetting.id != null and orderSetting.id != ''" >
                o.order_setting_id = #{orderSetting.id}
            </if>
            <if test="robot != null and robot.id != null and robot.id != ''" >
                AND o.robot_id = #{robot.id}
            </if>
            <if test="startStation != null and startStation.id != null and startStation.id != ''" >
                AND o.start_station_id = #{startStation.id}
            </if>
            <if test="shelf != null and shelf.id != null and shelf.id != ''" >
                AND o.shelf_id = #{shelf.id}
            </if>
            <if test="scene != null and scene.id != null and scene.id != ''" >
                AND o.scene_id = #{scene.id}
            </if>
            <if test="status != null" >
                AND o.status = #{status}
            </if>
            <if test="finishDate != null" >
                AND o.finish_date = #{finishDate}
            </if>
        </where>
    </select>

    <update id="returnToWaitOrder">
        update OR_ORDER SET
        robot_id = null,
        status = #{status}
        where id = #{id}
    </update>


    <select id="listOrdersByStation" resultType="cn.mrobot.bean.order.Order">
        select
        <include refid="orderColumn" />
        from OR_ORDER o
        WHERE o.START_STATION_ID = #{stationId}
        AND o.CREATE_TIME &gt;= #{beforeTime}
        AND o.CREATE_TIME &lt;= #{currentTime}
        ORDER BY (
        CASE o.STATUS
        WHEN 2 THEN 1
        WHEN 0 THEN 2
        WHEN 1 THEN 3
        WHEN 3 THEN 4
        ELSE -1 END
        ) ASC, o.create_time DESC
    </select>

    <select id="findFirstWaitOrder" resultType="cn.mrobot.bean.order.Order">
        select
        <include refid="orderColumn" />
        from OR_ORDER o
        WHERE o.status = 2
        AND o.start_station_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY o.create_time ASC limit 1
    </select>

    <select id="listProcessingOrderIdsToday" resultType="Long">
        select o.id
        from OR_ORDER o
        WHERE o.status = 0
        AND o.create_time &gt;= #{beforeTime}
        AND o.create_time &lt;= #{currentTime}
    </select>

    <select id="listDoneOrdersByRobotIdDateDesc" resultType="cn.mrobot.bean.order.Order">
        select o.*
        from OR_ORDER o
        WHERE o.robot_id = #{robotId}
        AND (o.status = 1 OR o.status = 3)
        ORDER BY o.create_time DESC
    </select>

    <select id="listDoneOrdersByRobotIdListDateDesc" resultType="cn.mrobot.bean.order.Order">
        select o.*
        from OR_ORDER o
        WHERE o.robot_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND (o.status = 1 OR o.status = 3)
        ORDER BY o.create_time DESC
    </select>


</mapper>